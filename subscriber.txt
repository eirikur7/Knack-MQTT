import random
from controller_simulator import KeyboardPress
from paho.mqtt import client as mqtt_client

# constants
keyboard = KeyboardPress()
broker = 'broker.emqx.io'
port = 1883
topic = "Knack-inputs"
client_id = f'Knack-{random.randint(0, 100)}'
username = 'eirikur'
password = 'nice-password69'
keys_allowed = {1073741904: 'left',    # left arrow
                1073741903: 'right',    # right arrow
                1073741906: 'up',
                1073741905: 'down',
                27: 'esc',
                119: 'w',
                97: 'a',
                115: 's',
                100: 'd'}


# connect MQTT to the cloud broker and return client object
def connect_mqtt() -> mqtt_client:
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(client_id)
    client.username_pw_set(username, password)
    client.on_connect = on_connect
    client.connect(broker, port)
    return client


# subscribes to the cloud channel corresponding to "publisher.py"
def subscribe(client: mqtt_client):
    def on_message(client, userdata, msg):
        print(f"Received `{msg.payload.decode()}` from `{msg.topic}` topic")
        press_keys(msg)

    client.subscribe(topic)
    client.on_message = on_message


# insert received message from publisher to press or release certain keys
def press_keys(msg):
    key, type_press = msg.payload.decode().split("-")
    key_char = keys_allowed[int(key)]
    print(key_char)
    if type_press == "d":
        keyboard.press_key(key_char)
    elif type_press == "u":
        keyboard.release_key(key_char)
    else:
        print(f"Message was not readable: {msg.payload.decode()}")


# start the run loop
def run():
    client = connect_mqtt()
    subscribe(client)
    client.loop_forever()


if __name__ == '__main__':
    run()
